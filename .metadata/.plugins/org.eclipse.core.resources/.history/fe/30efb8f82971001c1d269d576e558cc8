package com.java8;

import java.util.ArrayList;

public class LambdaExpressionNeed {

	public static void main(String[] args) {
		// by normal 
		System.out.println("Square of 4 by function : " + square(4));
		 
		// using anonoymus 
		Services sq = new Services(){

			@Override
			public int square(int a) {
				return a*a;
			}
		};
		
		// using lambda exp
		//Services s = (i) -> {return (i*i);}; 
		Services s = (i) -> (i*i); 
	
		System.out.println("Square of 5 by lambda : " +s.square(5));
		System.out.println("Square of 6 by anonymous : " +sq.square(6));
		
		// foreach by lambda
		ArrayList<Integer> a = new ArrayList<Integer>();
		for(int i=0;i<=5;i++) {
			a.add(i);
		}
		a.forEach((n)->System.out.println(s.square(n)));
		
		//  Thread using lambda
		Runnable r1=()->System.out.println("I am runnable thred");
		Thread t1 = new Thread(r1);
		t1.start();
		
		
		
	}

	private static int square(int i) {
		return (i*i);
	}

}
